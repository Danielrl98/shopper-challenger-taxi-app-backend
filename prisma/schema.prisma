// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]  
}

datasource db {
  provider = "postgresql"
  url = "postgresql://postgres:postgres@postgres:5432/postgres?schema=public"
}

model Drivers {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  car        String
  tax        Float
  min_km      Float
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  Reviews Reviews[]
  Rides Rides[]
}

model Customers {
  id          Int      @id @default(autoincrement())
  name        String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  Rides Rides[]
  Reviews Reviews[]
}

model Rides {
  id          Int      @id @default(autoincrement())
  customer_id Int
  driver_id   Int
  origin      String
  amount      Int
  destination String
  distance    Float
  duration    String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  driver     Drivers    @relation(fields: [driver_id], references: [id])
  customer   Customers  @relation(fields: [customer_id], references: [id])

  Reviews Reviews[]
}

model Reviews {
  id          Int      @id @default(autoincrement())
  driver_id   Int
  ride_id     Int
  customer_id Int
  comment     String
  stars       Float
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())

  driver     Drivers    @relation(fields: [driver_id], references: [id])
  ride       Rides      @relation(fields: [ride_id], references: [id])
  customer   Customers  @relation(fields: [customer_id], references: [id])
}